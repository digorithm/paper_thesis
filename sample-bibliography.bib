%%% ====================================================================
%%%  BibTeX-file{
%%%     author          = "Gerry Murray",
%%%     version         = "1.2",
%%%     date            = "2 April 2012",
%%%     filename        = "acmsmall-sample-bibfile.bib",
%%%     address         = "ACM, NY",
%%%     email           = "murray at hq.acm.org",
%%%     codetable       = "ISO/ASCII",
%%%     keywords        = "ACM Reference Format, bibliography, citation, references",
%%%     supported       = "yes",
%%%     docstring       = "This BibTeX database file contains 'bibdata' entries
%%%                        that 'match' the examples provided in the Specifications Document
%%%                        AND, also, 'legacy'-type bibs. It should assist authors in 
%%%                        choosing the 'correct' at-bibtype and necessary bib-fields
%%%                        so as to obtain the appropriate ACM Reference Format output. 
%%%			   It also contains many 'Standard Abbreviations'. "
%%%  }
%%% ====================================================================

% Journals

% First the Full Name is given, then the abbreviation used in the AMS Math
% Reviews, with an indication if it could not be found there.
% Note the 2nd overwrites the 1st, so swap them if you want the full name.


%Entries

@incollection{brun_engineering_2009,
   title = {Engineering self-adaptive systems through feedback loops},
   booktitle = {Software engineering for self-adaptive systems},
   publisher = {Springer},
   author = {Brun, Yuriy and Serugendo, Giovanna Di Marzo and Gacek, Cristina and Giese, Holger and Kienle, Holger and Litoiu, Marin and  Müller, Hausi and Pezzè, Mauro and Shaw, Mary},
   year = {2009},
   pages = {48--70},
   file = {Brun09SEfSAS.pdf:/home/rodrigo/.zotero/zotero/gvnp3j3r.default/zotero/storage/5HW2APRI/Brun09SEfSAS.pdf:application/pdf}
 }

@inproceedings{cantrill_dynamic_2004,
	title = {Dynamic {Instrumentation} of {Production} {Systems}.},
	booktitle = {{USENIX} {Annual} {Technical} {Conference}, {General} {Track}},
	author = {Cantrill, Bryan and Shapiro, Michael W. and Leventhal, Adam H.},
	year = {2004},
	pages = {15--28},
	file = {cantrill.pdf:/home/rodrigo/.zotero/zotero/gvnp3j3r.default/zotero/storage/E5U52JVP/cantrill.pdf:application/pdf}
}

@online{Prometheus,
  author = {Prometheus},
  title = {Prometheus},
  year = 2018,
  url = {https://prometheus.io/},
  urldate = {2018-02-02}
}

@online{Apdex,
  author = {Apdex},
  title = {Apdex},
  year = 2018,
  url = {apdex.org},
  urldate = {2018-02-02}
}

@online{Nagios,
  author = {Nagios},
  title = {Nagios},
  year = 2018,
  url = {https://www.nagios.org/},
  urldate = {2018-02-02}
}

@online{Datadog,
  author = {Datadog},
  title = {Datadog},
  year = 2018,
  url = {https://www.datadoghq.com/},
  urldate = {2018-02-02}
}

@article{kraska_case_2017,
	title = {The {Case} for {Learned} {Index} {Structures}},
	url = {http://arxiv.org/abs/1712.01208},
	abstract = {Indexes are models: a B-Tree-Index can be seen as a model to map a key to the position of a record within a sorted array, a Hash-Index as a model to map a key to a position of a record within an unsorted array, and a BitMap-Index as a model to indicate if a data record exists or not. In this exploratory research paper, we start from this premise and posit that all existing index structures can be replaced with other types of models, including deep-learning models, which we term learned indexes. The key idea is that a model can learn the sort order or structure of lookup keys and use this signal to effectively predict the position or existence of records. We theoretically analyze under which conditions learned indexes outperform traditional index structures and describe the main challenges in designing learned index structures. Our initial results show, that by using neural nets we are able to outperform cache-optimized B-Trees by up to 70\% in speed while saving an order-of-magnitude in memory over several real-world data sets. More importantly though, we believe that the idea of replacing core components of a data management system through learned models has far reaching implications for future systems designs and that this work just provides a glimpse of what might be possible.},
	urldate = {2018-01-09},
	journal = {arXiv:1712.01208 [cs]},
	author = {Kraska, Tim and Beutel, Alex and Chi, Ed H. and Dean, Jeffrey and Polyzotis, Neoklis},
	month = dec,
	year = {2017},
	note = {arXiv: 1712.01208},
	keywords = {Computer Science - Data Structures and Algorithms, Computer Science - Databases, Computer Science - Neural and Evolutionary Computing},
	file = {arXiv\:1712.01208 PDF:/home/rodrigo/.zotero/zotero/gvnp3j3r.default/zotero/storage/P7ULR2LG/Kraska et al. - 2017 - The Case for Learned Index Structures.pdf:application/pdf;arXiv.org Snapshot:/home/rodrigo/.zotero/zotero/gvnp3j3r.default/zotero/storage/57CCGMV8/1712.html:text/html}
}

@article{barna_hogna:_2015,
	title = {Hogna: a {Platform} for {Self}-{Adaptive} {Applications} in {Cloud} {Environments}},
	url = {http://dx.doi.org/10.1109/seams.2015.26},
	doi = {10.1109/seams.2015.26},
	abstract = {We propose Hogna, a platform for deploying self-managing web applications on cloud. The platform enables the deployment of the applications based on the automation of a set of operations (starting instances, installing necessary software and configuring the instances, etc.), and then the continuous monitoring of the health of the applications. The gathered monitoring data is analyzed using a performance model and an action plan is created and executed. Any components involved (for monitoring, analyzing, planning and deployment changes) can be customized to fit the needs of the application and/or researcher.},
	journal = {2015 IEEE/ACM 10th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
	author = {Barna, Cornel and Ghanbari, Hamoun and Litoiu, Marin and Shtern, Mark},
	year = {2015},
	pages = {83--87},
	file = {Barna_et_al-2015-2015_IEEE_ACM_10th_International_Symposium_on_Software_Engineering_for_Adaptive....pdf:/home/rodrigo/.zotero/zotero/gvnp3j3r.default/zotero/storage/HTURBFKK/Barna_et_al-2015-2015_IEEE_ACM_10th_International_Symposium_on_Software_Engineering_for_Adaptive....pdf:application/pdf}
}

@article{filieri2015software,
  author = {Filieri, Antonio and Maggio, Martina and Angelopoulos, Konstantinos and D'Ippolito, Nicolás and Gerostathopoulos, Ilias and Hempel, Andreas Berndt and Hoffmann, Henry and Jamshidi, Pooyan and Kalyvianaki, Evangelia and Klein, Cristian and Krikava, Filip and Misailovic, Sasa and Papadopoulos, Alessandro Vittorio and Ray, Suprio and Sharifloo, Amir M and Shevtsov, Stepan and Ujma, Mateusz and Vogel, Thomas},
  year = {2015},
  title = {Software Engineering Meets Control Theory},
  journal = {2015 IEEE/ACM 10th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  publisher = {2015 IEEE/ACM 10th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  doi = {10.1109/seams.2015.12},
  url = {http://dx.doi.org/10.1109/seams.2015.12},
  pages = {71--82},
  abstract = {The software engineering community has proposed numerous approaches for making software self-adaptive. These approaches take inspiration from machine learning and control theory, constructing software that monitors and modifies its own behavior to meet goals. Control theory, in particular, has received considerable attention as it represents a general methodology for creating adaptive systems. Control-theoretical software implementations, however, tend to be ad hoc. While such solutions often work in practice, it is difficult to understand and reason about the desired properties and behavior of the resulting adaptive software and its controller. This paper discusses a control design process for software systems which enables automatic analysis and synthesis of a controller that is guaranteed to have the desired properties and behavior. The paper documents the process and illustrates its use in an example that walks through all necessary steps for self-adaptive controller synthesis.}
}


@book{gmach2007workload,
  author = {Gmach, Daniel and Rolia, Jerry and Cherkasova, Ludmila and Kemper, Alfons},
  year = {2007},
  title = {Workload Analysis and Demand Prediction of Enterprise Data Center Applications},
  journal = {2007 IEEE 10th International Symposium on Workload Characterization},
  publisher = {2007 IEEE 10th International Symposium on Workload Characterization},
  isbn = {9781424415618},
  doi = {10.1109/iiswc.2007.4362193},
  url = {http://dx.doi.org/10.1109/iiswc.2007.4362193},
  month = {7},
  pages = {171--180},
  abstract = {Advances in virtualization technology are enabling the creation of resource pools of servers that permit multiple application workloads to share each server in the pool. Understanding the nature of enterprise workloads is crucial to properly designing and provisioning current and future services in such pools. This paper considers issues of workload analysis, performance modeling, and capacity planning. Our goal is to automate the efficient use of resource pools when hosting large numbers of enterprise services. We use a trace based approach for capacity management that relies on i) the characterization of workload demand patterns, ii) the generation of synthetic workloads that predict future demands based on the patterns, and iii) a workload placement recommendation service. The accuracy of capacity planning predictions depends on our ability to characterize workload demand patterns, to recognize trends for expected changes in future demands, and to reflect business forecasts for otherwise unexpected changes in future demands. A workload analysis demonstrates the burstiness and repetitive nature of enterprise workloads. Workloads are automatically classified according to their periodic behavior. The similarity among repeated occurrences of patterns is evaluated. Synthetic workloads are generated from the patterns in a manner that maintains the periodic nature, burstiness, and trending behavior of the workloads. A case study involving six months of data for 139 enterprise applications is used to apply and evaluate the enterprise workload analysis and related capacity planning methods. The results show that when consolidating to 8 processor systems, we predicted future per-server required capacity to within one processor 95% of the time. The accuracy of predictions for required capacity suggests that such resource savings can be achieved with little risk.}
}

@book{bobroff2007dynamic,
  author = {Bobroff, Norman and Kochut, Andrzej and Beaty, Kirk},
  year = {2007},
  title = {Dynamic Placement of Virtual Machines for Managing SLA Violations},
  journal = {2007 10th IFIP/IEEE International Symposium on Integrated Network Management},
  publisher = {2007 10th IFIP/IEEE International Symposium on Integrated Network Management},
  isbn = {9781424407982},
  doi = {10.1109/inm.2007.374776},
  url = {http://dx.doi.org/10.1109/inm.2007.374776},
  month = {7},
  pages = {119--128},
  abstract = {A dynamic server migration and consolidation algorithm is introduced. The algorithm is shown to provide substantial improvement over static server consolidation in reducing the amount of required capacity and the rate of service level agreement violations. Benefits accrue for workloads that are variable and can be forecast over intervals shorter than the time scale of demand variability. The management algorithm reduces the amount of physical capacity required to support a specified rate of SLA violations for a given workload by as much as 50% as compared to static consolidation approach. Another result is that the rate of SLA violations at fixed capacity may be reduced by up to 20%. The results are based on hundreds of production workload traces across a variety of operating systems, applications, and industries.}
}

@article{caron2011pattern,
  author = {Caron, Eddy and Desprez, Frédéric and Muresan, Adrian},
  year = {2011},
  title = {Pattern Matching Based Forecast of Non-periodic Repetitive Behavior for Cloud Clients},
  journal = {Journal of Grid Computing},
  publisher = {Journal of Grid Computing},
  issn = {1570-7873},
  doi = {10.1007/s10723-010-9178-4},
  url = {http://dx.doi.org/10.1007/s10723-010-9178-4},
  volume = {9},
  month = {11},
  pages = {49--64},
  number = {1},
  abstract = {The Cloud phenomenon brings along the cost-saving benefit of dynamic scaling. As a result, the question of efficient resource scaling arises. Prediction is necessary as the virtual resources that Cloud computing uses have a setup time that is not negligible. We propose an approach to the problem of workload prediction based on identifying similar past occurrences of the current short-term workload history. We present in detail the Cloud client resource auto-scaling algorithm that uses the above approach to help when scaling decisions are made, as well as experimental results by using real-world Cloud client application traces. We also present an overall evaluation of this approach, its potential and usefulness for enabling efficient auto-scaling of Cloud user resources.}
}


@book{meng2010efficient,
  author = {Meng, Xiaoqiao and Isci, Canturk and Kephart, Jeffrey and Zhang, Li and Bouillet, Eric and Pendarakis, Dimitrios},
  year = {2010},
  title = {Efficient resource provisioning in compute clouds via VM multiplexing},
  isbn = {9781450300742},
  doi = {10.1145/1809049.1809052},
  url = {http://dx.doi.org/10.1145/1809049.1809052},
  month = {10},
  pages = {11--20},
  abstract = {Resource provisioning in compute clouds often require an estimate of the capacity needs of Virtual Machines (VMs). The estimated VM size is the basis for allocating resources commensurate with workload demand. In contrast to the traditional practice of estimating the VM sizes individually, we propose a joint-VM sizing approach in which multiple VMs are consolidated and provisioned, based on an estimate of their aggregate capacity needs. This new approach exploits statistical multiplexing among the workload patterns of multiple VMs, i.e., the peaks and valleys in one workload pattern do not necessarily coincide with the others. Thus, the unused resources of a low utilized VM can be directed to the other co-located VMs with high utilization. Compared to individual VM based provisioning, joint-VM sizing and provisioning may lead to much higher resource utilization. This paper presents three design modules to enable the concept in practice. Specifically, a performance constraint describing the capacity need of a VM for achieving a certain level of application performance; an algorithm for estimating the size of jointly provisioning VMs; a VM selection method that seeks to find good VM combinations for being provisioned together. We showcase that the proposed three modules can be seamlessly plugged into existing applications such as resource provisioning, and providing resource guarantees for VMs. The proposed algorithms and applications are evaluated by monitoring data collected from about 16 thousand VMs in commercial data centers. These evaluations reveal more than 45% improvements in terms of the overall resource utilization.}
}



@article{towards_autonomic_allocation,
author = {Hedwig, Markus; Malkowski, Simon; and Neumann, Dirk},
year = {2010},
title = {TOWARDS AUTONOMIC COST-AWARE ALLOCATION OF CLOUD RESOURCES},
publisher = {ICIS},
url = {https://aisel.aisnet.org/icis2010_submissions/180}
}

@article{autonomic_article,
author = {Horn, P},
year = {2001},
month = {10},
pages = {},
title = {Autonomic Computing: IBM's Perspective on the State of Information Technology},
volume = {2007},
booktitle = {Computing Systems}
}

@article{ganek_dawning_2003,
	title = {The dawning of the autonomic computing era},
	volume = {42},
	number = {1},
	journal = {IBM systems Journal},
	author = {Ganek, Alan G. and Corbi, Thomas A.},
	year = {2003},
	pages = {5--18},
	file = {7266bfb13e39a9f722ae240a7a78ae7380ea.pdf:/home/rodrigo/.zotero/zotero/gvnp3j3r.default/zotero/storage/QE5B2XM9/7266bfb13e39a9f722ae240a7a78ae7380ea.pdf:application/pdf}
}

@inproceedings{porter_rex:_2016,
	address = {GA},
	title = {{REX}: {A} {Development} {Platform} and {Online} {Learning} {Approach} for {Runtime} {Emergent} {Software} {Systems}},
	isbn = {978-1-931971-33-1},
	url = {https://www.usenix.org/conference/osdi16/technical-sessions/presentation/porter},
	booktitle = {12th {USENIX} {Symposium} on {Operating} {Systems} {Design} and {Implementation} ({OSDI} 16)},
	publisher = {USENIX Association},
	author = {Porter, Barry and Grieves, Matthew and Filho, Roberto Rodrigues and Leslie, David},
	year = {2016},
	keywords = {SummerResearch, SummerResearchProposal},
	pages = {333--348}
}

@article{arcaini_modeling_2015,
	title = {Modeling and {Analyzing} {MAPE}-{K} {Feedback} {Loops} for {Self}-{Adaptation}},
	url = {http://dx.doi.org/10.1109/seams.2015.10},
	doi = {10.1109/seams.2015.10},
	abstract = {The MAPE-K (Monitor-Analyze-Plan-Execute over a shared Knowledge) feedback loop is the most influential reference control model for autonomic and self-adaptive systems. This paper presents a conceptual and methodological framework for formal modeling, validating, and verifying distributed self-adaptive systems. We show how MAPE-K loops for self-adaptation can be naturally specified in an abstract stateful language like Abstract State Machines. In particular, we exploit the concept of multi-agent Abstract State Machines to specify decentralized adaptation control by using MAPE computations. We support techniques for validating and verifying adaptation scenarios, and getting feedback of the correctness of the adaptation logic as implemented by the MAPE-K loops. In particular, a verification technique based on meta-properties is proposed to allow discovering unwanted interferences between MAPE-K loops at the early stages of the system design. As a proof-of-concepts, we model and analyze a traffic monitoring system.},
	journal = {2015 IEEE/ACM 10th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
	author = {Arcaini, Paolo and Riccobene, Elvinia and Scandurra, Patrizia},
	year = {2015},
	pages = {13--23},
	file = {Arcaini_et_al-2015-2015_IEEE_ACM_10th_International_Symposium_on_Software_Engineering_for....pdf:/home/rodrigo/.zotero/zotero/gvnp3j3r.default/zotero/storage/CAT2RV7H/Arcaini_et_al-2015-2015_IEEE_ACM_10th_International_Symposium_on_Software_Engineering_for....pdf:application/pdf}
}

@article{kistowski_modeling_2017,
	title = {Modeling and {Extracting} {Load} {Intensity} {Profiles}},
	volume = {11},
	issn = {1556-4665},
	url = {http://dx.doi.org/10.1145/3019596},
	doi = {10.1145/3019596},
	abstract = {Today’s system developers and operators face the challenge of creating software systems that make efficient use of dynamically allocated resources under highly variable and dynamic load profiles, while at the same time delivering reliable performance. Autonomic controllers, for example, an advanced autoscaling mechanism in a cloud computing context, can benefit from an abstracted load model as knowledge to reconfigure on time and precisely. Existing workload characterization approaches have limited support to capture variations in the interarrival times of incoming work units over time (i.e., a variable load profile). For example, industrial and scientific benchmarks support constant or stepwise increasing load, or interarrival times defined by statistical distributions or recorded traces. These options show shortcomings either in representative character of load variation patterns or in abstraction and flexibility of their format. In this article, we present the Descartes Load Intensity Model (DLIM) approach addressing these issues. DLIM provides a modeling formalism for describing load intensity variations over time. A DLIM instance is a compact formal description of a load intensity trace. DLIM-based tools provide features for benchmarking, performance, and recorded load intensity trace analysis. As manually obtaining and maintaining DLIM instances becomes time consuming, we contribute three automated extraction methods and devised metrics for comparison and method selection. We discuss how these features are used to enhance system management approaches for adaptations during runtime, and how they are integrated into simulation contexts and enable benchmarking of elastic or adaptive behavior. We show that automatically extracted DLIM instances exhibit an average modeling error of 15.2\% over 10 different real-world traces that cover between 2 weeks and 7 months. These results underline DLIM model expressiveness. In terms of accuracy and processing speed, our proposed extraction methods for the descriptive models are comparable to existing time series decomposition methods. Additionally, we illustrate DLIM applicability by outlining approaches of workload modeling in systems engineering that employ or rely on our proposed load intensity modeling formalism.},
	number = {4},
	journal = {ACM Transactions on Autonomous and Adaptive Systems (TAAS)},
	author = {Kistowski, Jóakim Von and Herbst, Nikolas and Kounev, Samuel and Groenda, Henning and Stier, Christian and Lehrig, Sebastian},
	year = {2017},
	pages = {23},
	file = {Kistowski_et_al-2017-ACM_Transactions_on_Autonomous_and_Adaptive_Systems_(TAAS).pdf:/home/rodrigo/.zotero/zotero/gvnp3j3r.default/zotero/storage/UTDNJECT/Kistowski_et_al-2017-ACM_Transactions_on_Autonomous_and_Adaptive_Systems_(TAAS).pdf:application/pdf}
}

@book{andrew_pavlo_self-driving_2017,
	title = {Self-{Driving} {Database} {Management} {Systems}},
	author = {Andrew Pavlo, Gustavo Angulo, Joy Arulraj, Haibin Lin, Jiexi Lin, Lin Ma, Prashanth Menon, Todd Mowry, Matthew Perron, Ian Quah, Siddharth Santurkar, Anthony Tomasic, Skye Toor, Dana Van Aken, Ziqi Wang, Yingjun Wu, Ran Xian, Tieying Zhang},
	year = {2017},
	keywords = {SummerResearchProposal}
}

@inproceedings{salehie_self-adaptive_2009,
	title = {Self-adaptive software: {Landscape} and research challenges},
	publisher = {ACM Transactions on Autonomous and Adaptive Systems (TAAS)},
	author = {Salehie, M. and Tahvildari, L.},
	year = {2009},
	keywords = {SummerResearch, SummerResearchProposal}
}

@phdthesis{ganapathi_predicting_2009,
	title = {Predicting and {Optimizing} {System} {Utilization} and {Performance} via {Statistical} {Machine} {Learning}},
	url = {http://www2.eecs.berkeley.edu/Pubs/TechRpts/2009/EECS-2009-181.html},
	abstract = {The complexity of modern computer systems makes performance modeling an invaluable resource for guiding crucial decisions such as workload management, conﬁguration management, and resource provisioning. With continually evolving systems, it is diﬃcult to obtain ground truth about system behavior. Moreover, system management policies must adapt to changes in workload and conﬁguration to continue making eﬃcient decisions. Thus, we require data-driven modeling techniques that auto-extract relationships between a system’s input workload, its conﬁguration parameters, and consequent performance. This dissertation argues that statistical machine learning (SML) techniques are a powerful asset to system performance modeling. We present an SML-based methodology that extracts correlations between a workload’s pre-execution characteristics or conﬁguration parameters, and post-execution performance observations. We leverage these correlations for performance prediction and optimization. We present three success stories that validate the usefulness of our methodology on storage and compute based parallel systems. In all three scenarios, we outperform state of the art alternatives. Our results strongly suggest the use of SML-based performance modeling to improve the quality of system management decisions.},
	school = {EECS Department, University of California, Berkeley},
	author = {Ganapathi, Archana Sulochana},
	month = dec,
	year = {2009},
	keywords = {SummerResearch, SummerResearchProposal}
}

@article{kephart_vision_2003,
	title = {The vision of autonomic computing},
	volume = {36},
	issn = {0018-9162},
	doi = {10.1109/MC.2003.1160055},
	abstract = {Summary form only given. Strong light-matter coupling has been recently successfully explored in the GHz and THz [1] range with on-chip platforms. New and intriguing quantum optical phenomena have been predicted in the ultrastrong coupling regime [2], when the coupling strength Ω becomes comparable to the unperturbed frequency of the system ω. We recently proposed a new experimental platform where we couple the inter-Landau level transition of an high-mobility 2DEG to the highly subwavelength photonic mode of an LC meta-atom [3] showing very large Ω/ωc = 0.87. Our system benefits from the collective enhancement of the light-matter coupling which comes from the scaling of the coupling Ω ∝ √n, were n is the number of optically active electrons. In our previous experiments [3] and in literature [4] this number varies from 104-103 electrons per meta-atom. We now engineer a new cavity, resonant at 290 GHz, with an extremely reduced effective mode surface Seff = 4 × 10-14 m2 (FE simulations, CST), yielding large field enhancements above 1500 and allowing to enter the few ({\textless};100) electron regime. It consist of a complementary metasurface with two very sharp metallic tips separated by a 60 nm gap (Fig.1(a, b)) on top of a single triangular quantum well. THz-TDS transmission experiments as a function of the applied magnetic field reveal strong anticrossing of the cavity mode with linear cyclotron dispersion. Measurements for arrays of only 12 cavities are reported in Fig.1(c). On the top horizontal axis we report the number of electrons occupying the topmost Landau level as a function of the magnetic field. At the anticrossing field of B=0.73 T we measure approximately 60 electrons ultra strongly coupled (Ω/ω- {\textbar}{\textbar}},
	number = {1},
	journal = {Computer},
	author = {Kephart, J. O. and Chess, D. M.},
	month = jan,
	year = {2003},
	keywords = {autonomic computing, Biology computing, Computer industry, Computer vision, corporate-wide computing systems, Crisis management, DP industry, Environmental management, Humans, Internet, LAN interconnection, Pervasive computing, self-managing computing systems, software complexity crisis, Technological innovation},
	pages = {41--50},
	file = {IEEE Xplore Abstract Record:/home/rodrigo/.zotero/zotero/gvnp3j3r.default/zotero/storage/X6SHXPZW/1160055.html:text/html}
}

@article{computing_architectural_2006,
	title = {An architectural blueprint for autonomic computing},
	volume = {31},
	journal = {IBM White Paper},
	author = {Computing, Autonomic},
	year = {2006},
	file = {AC Blueprint White Paper V7.pdf:/home/rodrigo/.zotero/zotero/gvnp3j3r.default/zotero/storage/PRXD2UJX/AC Blueprint White Paper V7.pdf:application/pdf}
}

@Inbook{Brun2013,
author="Brun, Yuriy
and Desmarais, Ron
and Geihs, Kurt
and Litoiu, Marin
and Lopes, Antonia
and Shaw, Mary
and Smit, Michael",
editor="de Lemos, Rog{\'e}rio
and Giese, Holger
and M{\"u}ller, Hausi A.
and Shaw, Mary",
title="A Design Space for Self-Adaptive Systems",
bookTitle="Software Engineering for Self-Adaptive Systems II: International Seminar, Dagstuhl Castle, Germany, October 24-29, 2010 Revised Selected and Invited Papers",
year="2013",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="33--50",
abstract="Self-adaptive systems research is expanding as systems professionals recognize the importance of automation for managing the growing complexity, scale, and scope of software systems. The current approach to designing such systems is ad hoc, varied, and fractured, often resulting in systems with parts of multiple, sometimes poorly compatible designs. In addition to the challenges inherent to all software, this makes evaluating, understanding, comparing, maintaining, and even using such systems more difficult. This paper discusses the importance of systematic design and identifies the dimensions of the self-adaptive system design space. It identifies key design decisions, questions, and possible answers relevant to the design space, and organizes these into five clusters: observation, representation, control, identification, and enacting adaptation. This characterization can serve as a standard lexicon, that, in turn, can aid in describing and evaluating the behavior of existing and new self-adaptive systems. The paper also outlines the future challenges for improving the design of self-adaptive systems.",
isbn="978-3-642-35813-5",
doi="10.1007/978-3-642-35813-5_2",
url="https://doi.org/10.1007/978-3-642-35813-5_2"
}

@article{herbst_self-adaptive_2014,
	title = {Self-adaptive workload classification and forecasting for proactive resource provisioning},
	volume = {26},
	issn = {15320626},
	shorttitle = {Self-adaptive workload classification and forecasting for proactive resource provisioning},
	url = {http://doi.wiley.com/10.1002/cpe.3224},
	doi = {10.1002/cpe.3224},
	language = {en},
	number = {12},
	urldate = {2017-05-30},
	journal = {Concurrency and Computation: Practice and Experience},
	author = {Herbst, Nikolas Roman and Huber, Nikolaus and Kounev, Samuel and Amrehn, Erich},
	month = aug,
	year = {2014},
	keywords = {SummerResearch},
	pages = {2053--2078},
	file = {aea33dfe3a4e9a661f6b1f34fcaa8abba6c7.pdf:/home/rodrigo/.zotero/zotero/gvnp3j3r.default/zotero/storage/35TM9U4M/aea33dfe3a4e9a661f6b1f34fcaa8abba6c7.pdf:application/pdf}
}

@article{liu_probabilistic-based_2016,
	title = {Probabilistic-based workload forecasting and service redeployment for multi-tenant services},
	volume = {9},
	issn = {1740-0562, 1740-0570},
	url = {http://www.inderscience.com/link.php?id=74666},
	doi = {10.1504/IJHPCN.2016.074666},
	language = {en},
	number = {1/2},
	urldate = {2017-05-30},
	journal = {International Journal of High Performance Computing and Networking},
	author = {Liu, Shijun and Di, Zeyu and Wu, Lei and Pan, Li and Shi, Yuliang},
	year = {2016},
	keywords = {SummerResearch, ToRead},
	pages = {134},
	file = {570b8feb08ae8883a1ffc151.pdf:/home/rodrigo/.zotero/zotero/gvnp3j3r.default/zotero/storage/G9KRK8VP/570b8feb08ae8883a1ffc151.pdf:application/pdf}
}

@book{mitsa_temporal_2010,
	address = {Boca Raton, FL},
	series = {Chapman \& {Hall}/{CRC} data mining and knowledge discovery series},
	title = {Temporal data mining},
	isbn = {978-1-4200-8976-9},
	publisher = {Chapman \& Hall/CRC},
	author = {Mitsa, Theophano},
	year = {2010},
	note = {OCLC: ocn474869534},
	keywords = {Data mining, Temporal databases},
	file = {Temporal Data Mining [Mitsa 2010-03-10].pdf:/home/rodrigo/.zotero/zotero/gvnp3j3r.default/zotero/storage/2IVC3ZHI/Temporal Data Mining [Mitsa 2010-03-10].pdf:application/pdf}
}

@misc{noauthor_short_nodate,
	title = {short term performance forecasting in enterprise systems},
	url = {http://www.hpl.hp.com/techreports/2005/HPL-2005-50.pdf},
	urldate = {2017-07-07},
	file = {HPL-2005-50.pdf:/home/rodrigo/.zotero/zotero/gvnp3j3r.default/zotero/storage/XFUHP6F5/HPL-2005-50.pdf:application/pdf}
}

@misc{using_prob_reasoning_automate_software_tuning,
	title = {Using probabilistic reasoning to automate software tuning},
	url = {http://ftp.deas.harvard.edu/techreports/tr-08-04.pdf},
	urldate = {2017-07-12},
	file = {tr-08-04.pdf:/home/rodrigo/.zotero/zotero/gvnp3j3r.default/zotero/storage/HS9IRRHR/tr-08-04.pdf:application/pdf}
}

@inproceedings{cohen_correlating_2004,
	title = {Correlating {Instrumentation} {Data} to {System} {States}: {A} {Building} {Block} for {Automated} {Diagnosis} and {Control}.},
	volume = {4},
	shorttitle = {Correlating {Instrumentation} {Data} to {System} {States}},
	url = {http://sailhome.cs.queensu.ca/~corpaul/ciscxxx/papers/HPL-2004-183.pdf},
	urldate = {2017-07-17},
	booktitle = {{OSDI}},
	author = {Cohen, Ira and Chase, Jeffrey S. and Goldszmidt, Moises and Kelly, Terence and Symons, Julie},
	year = {2004},
	pages = {16--16},
	file = {cohen.pdf:/home/rodrigo/.zotero/zotero/gvnp3j3r.default/zotero/storage/CU5KHAZM/cohen.pdf:application/pdf}
}

@inproceedings{faniyi_architecting_2014,
	title = {Architecting {Self}-{Aware} {Software} {Systems}},
	doi = {10.1109/WICSA.2014.18},
	abstract = {Contemporary software systems are becoming increasingly large, heterogeneous, and decentralised. They operate in dynamic environments and their architectures exhibit complex trade-offs across dimensions of goals, time, and interaction, which emerges internally from the systems and externally from their environment. This gives rise to the vision of self-aware architecture, where design decisions and execution strategies for these concerns are dynamically analysed and seamlessly managed at run-time. Drawing on the concept of self-awareness from psychology, this paper extends the foundation of software architecture styles for self-adaptive systems to arrive at a new principled approach for architecting self-aware systems. We demonstrate the added value and applicability of the approach in the context of service provisioning to cloud-reliant service-based applications.},
	booktitle = {2014 {IEEE}/{IFIP} {Conference} on {Software} {Architecture}},
	author = {Faniyi, F. and Lewis, P. R. and Bahsoon, R. and Yao, X.},
	month = apr,
	year = {2014},
	keywords = {Adaptation models, Architecture style, cloud computing, cloud-reliant service-based applications, Computer architecture, contemporary software systems, Context, design decisions, Educational institutions, execution strategies, Quality of service, Self-adaptation, self-adaptive systems, Self-awareness, self-aware software system architecture, Sensors, service provisioning, software architecture, software architecture styles, Software systems},
	pages = {91--94},
	file = {IEEE Xplore Abstract Record:/home/rodrigo/.zotero/zotero/gvnp3j3r.default/zotero/storage/RA6WT2AD/6827105.html:text/html;IEEE Xplore Full Text PDF:/home/rodrigo/.zotero/zotero/gvnp3j3r.default/zotero/storage/I63DMDHM/Faniyi et al. - 2014 - Architecting Self-Aware Software Systems.pdf:application/pdf}
}

@inproceedings{draheim_realistic_2006,
	title = {Realistic load testing of web applications},
	url = {http://ieeexplore.ieee.org/abstract/document/1602358/},
	urldate = {2017-08-28},
	booktitle = {Software {Maintenance} and {Reengineering}, 2006. {CSMR} 2006. {Proceedings} of the 10th {European} {Conference} on},
	publisher = {IEEE},
	author = {Draheim, Dirk and Grundy, John and Hosking, John and Lutteroth, Christof and Weber, Gerald},
	year = {2006},
	pages = {11--pp},
	file = {DraheimEtAl2006-LoadTesting.pdf:/home/rodrigo/.zotero/zotero/gvnp3j3r.default/zotero/storage/5WMWEHJS/DraheimEtAl2006-LoadTesting.pdf:application/pdf}
}

@inproceedings{almeida_capacity_2002,
	title = {Capacity {Planning} for {Web} {Services}.},
	url = {http://link.springer.com/content/pdf/10.1007/3-540-45798-4.pdf#page=151},
	urldate = {2017-08-28},
	booktitle = {Performance},
	publisher = {Springer},
	author = {Almeida, Virgilio AF},
	year = {2002},
	pages = {142--157},
	file = {3-540-45798-4_7.pdf:/home/rodrigo/.zotero/zotero/gvnp3j3r.default/zotero/storage/T6TGCH3G/3-540-45798-4_7.pdf:application/pdf}
}

@inproceedings{oh_finding_2017,
	title = {Finding near-optimal configurations in product lines by random sampling},
	isbn = {978-1-4503-5105-8},
	url = {http://dl.acm.org/citation.cfm?doid=3106237.3106273},
	doi = {10.1145/3106237.3106273},
	language = {en},
	urldate = {2017-09-07},
	publisher = {ACM Press},
	author = {Oh, Jeho and Batory, Don and Myers, Margaret and Siegmund, Norbert},
	year = {2017},
	pages = {61--71},
	file = {17FSE.pdf:/home/rodrigo/.zotero/zotero/gvnp3j3r.default/zotero/storage/JBX7DPBW/17FSE.pdf:application/pdf}
}

@article{shevtsov_control-theoretical_2017,
	title = {Control-{Theoretical} {Software} {Adaptation}: {A} {Systematic} {Literature} {Review}},
	issn = {0098-5589, 1939-3520},
	shorttitle = {Control-{Theoretical} {Software} {Adaptation}},
	url = {http://ieeexplore.ieee.org/document/7929422/},
	doi = {10.1109/TSE.2017.2704579},
	urldate = {2017-09-11},
	journal = {IEEE Transactions on Software Engineering},
	author = {Shevtsov, Stepan and Berekmeri, Mihaly and Weyns, Danny and Maggio, Martina},
	year = {2017},
	pages = {1--1},
	file = {07929422.pdf:/home/rodrigo/.zotero/zotero/gvnp3j3r.default/zotero/storage/VDXAB6HC/07929422.pdf:application/pdf}
}

@book{de_lemos_software_2013,
	address = {Berlin, Heidelberg},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Software {Engineering} for {Self}-{Adaptive} {Systems} {II}},
	volume = {7475},
	isbn = {978-3-642-35812-8 978-3-642-35813-5},
	url = {http://link.springer.com/10.1007/978-3-642-35813-5},
	urldate = {2017-09-18},
	publisher = {Springer Berlin Heidelberg},
	editor = {de Lemos, Rogério and Giese, Holger and Müller, Hausi A. and Shaw, Mary},
	year = {2013},
	note = {DOI: 10.1007/978-3-642-35813-5},
	file = {10.1007978-3-642-35813-5.pdf:/home/rodrigo/.zotero/zotero/gvnp3j3r.default/zotero/storage/4TA2JX8D/10.1007978-3-642-35813-5.pdf:application/pdf}
}

@presentation{Gillula10_FusingMachineLearningControlTheory,
    author = {Jeremy Gillula},
    title = {Fusing Machine Learning \& Control Theory},
    day = {3},
    month = {November},
    year = {2010},
    note = {Presented at weekly ActionWebs meeting.},
    abstract = {(No abstract.)},
    URL = {http://chess.eecs.berkeley.edu/pubs/714.html}
}

@book{Sutton:1998:IRL:551283,
 author = {Sutton, Richard S. and Barto, Andrew G.},
 title = {Introduction to Reinforcement Learning},
 year = {1998},
 isbn = {0262193981},
 edition = {1st},
 publisher = {MIT Press},
 address = {Cambridge, MA, USA},
} 